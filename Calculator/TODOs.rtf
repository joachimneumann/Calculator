{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red108\green54\blue169;
\red196\green26\blue22;\red93\green108\blue121;\red15\green104\blue160;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0\c85000;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c42190\c21278\c66379;
\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c36526\c42188\c47515;\csgenericrgb\c5882\c40784\c62745;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid102\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading80\partightenfactor0
\ls1\ilvl0
\f0\fs26\fsmilli13090 \cf0 {\listtext	\uc0\u8226 	}Brainmodel() has private brain and published Display. This is the only published property in BrainModel. everything else is private\
{\listtext	\uc0\u8226 	}Brainmodel.process() returns Result struct with Bool isValid and string pendingKey\
{\listtext	\uc0\u8226 	}Memory managed in BrainModel. m+ and m- special operation in brain, possibly new brain. \
{\listtext	\uc0\u8226 	}Brain function last() for m+ 
\f1\fs26 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
No global variables!\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}class DebugBrain: Brain \{ func debugPress() \}\
{\listtext	\uc0\u8226 	}No callback in brain. Use await!\
{\listtext	\uc0\u8226 	}get rid of all DispatchQueue.main.async and use @MainActor instead\
{\listtext	\uc0\u8226 	}How do I delay a @MainActor as in 
\f2\fs24 \cf2 \cb3 DispatchQueue.\cf4 main\cf2 .asyncAfter?
\f1\fs26 \cf0 \cb1 \
{\listtext	\uc0\u8226 	}Copy, 5 million: button longer orange than text\
{\listtext	\uc0\u8226 	}preliminary -> real -> preliminary: animate opacity\
{\listtext	\uc0\u8226 	}
\f2 \cf2 \cb3 keyPressResponder
\f1 \cf0 \cb1  not optional\
{\listtext	\uc0\u8226 	}nur wenn notwendig: 
\f2\fs24 \cf4 \cb3 replacingOccurrences\cf2 (\cf4 of\cf2 : \cf5 ","\cf2 , \cf4 with\cf2 : \cf5 "."\cf2 )
\f1\fs26 \cf0 \cb1 \
{\listtext	\uc0\u8226 	}localisation (, versus .)\
{\listtext	\uc0\u8226 	}use Kerning again, compare to iOS calculator \
{\listtext	\uc0\u8226 	}thousand-separator ?
\f3\fs24 \cf6 \cb3  \
\ls2\ilvl0
\f1\fs26 \cf0 \cb1 {\listtext	\uc0\u8226 	}switch() in brain: move to model\
{\listtext	\uc0\u8226 	}build gmp and mpfr libraries for specific iOS version / SDK and X86 Macs\
{\listtext	\uc0\u8226 	}Test in-app purchase\
{\listtext	\uc0\u8226 	}
\f2\fs24 \cf7 \cb3 portraitMaxLength: 
\f1\fs26 \cf0 \cb1 replace with
\f2\fs24 \cf7 \cb3  dotswidth 
\f1\fs26 \cf0 \cb1 and
\f2\fs24 \cf7 \cb3  fontsize
\f1\fs26 \cf0 \cb1 \
{\listtext	\uc0\u8226 	}getDisplayData as async call\
{\listtext	\uc0\u8226 	}investigate iOS; (-2) YsqrtX 3 -> -1.2599. Me: error\
{\listtext	\uc0\u8226 	}investigate 
\f2\fs24 \cf2 \cb3 mpfr_init_set_str
\f1\fs26 \cf0 \cb1 \
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0
\f2\fs24 \cf2 \cb3 {\listtext	\uc0\u8226 	}
\f1\fs26 \cf0 \cb1 investigate
\f2\fs24 \cf2 \cb3  mpfr-STRTOFR ?\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0
\f1\fs26 \cf0 \cb1 {\listtext	\uc0\u8226 	}Settings, bottom: documentation:\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	
\f0 \uc0\u8259 
\f1 	}hobby project\
{\listtext	
\f0 \uc0\u8259 
\f1 	}Gmp memory: crash unavoidable\
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}Mac\
\pard\tx940\tx1440\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1440\fi-1440\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	
\f0 \uc0\u8259 
\f1 	}https://developer.apple.com/tutorials/swiftui/creating-a-macos-app\
{\listtext	
\f0 \uc0\u8259 
\f1 	}resizable? detect: 1. size of screen 834.0x1194.0 and EdgeInsets all 0\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0                 let isMac = false\
                if isMac \{\
                    return UIInterfaceOrientationMask.landscape\
                \} else \{}